import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'java'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenLocal()
    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots/')
    }
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation 'me.lucko:fabric-permissions-api:0.1-SNAPSHOT'

    implementation 'org.spongepowered:configurate-core:4.1.2'
    implementation 'org.spongepowered:configurate-yaml:4.1.2'
    implementation 'net.analyse:sdk:1.1.11'
    implementation 'net.sf.trove4j:trove4j:3.0.3'
    implementation 'redis.clients:jedis:4.2.3'
    implementation 'org.slf4j:slf4j-simple:1.7.36'

    shadow('org.spongepowered:configurate-core:4.1.2')
    shadow('org.spongepowered:configurate-yaml:4.1.2')
    shadow('net.analyse:sdk:1.1.11') {
        exclude module: 'kotlin'
    }
    shadow('net.sf.trove4j:trove4j:3.0.3')
    shadow('org.slf4j:slf4j-simple:1.7.36')
    shadow('redis.clients:jedis:4.2.0') {
        exclude module: 'gson'
    }
    //shadow('me.lucko:fabric-permissions-api:0.1-SNAPSHOT')
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "net.analyse.plugin.lib"

}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

shadowJar {
    configurations = [project.configurations.shadow]
    minimize()
}

jar {
    from "LICENSE"
}

remapJar {
    dependsOn(shadowJar)
    input = tasks.shadowJar.archiveFile
    archiveName = "analyse.jar"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        mavenLocal()
    }
}
